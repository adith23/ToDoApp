# # This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches:
      - main
      - Lahiru
      - Dewni
      - Chamika
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: npm Install
      run: npm ci
    - run: npm run build --if-present
    - run: npm run test
    -
      name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: sashin517/do-app:latest


# name: ðŸš€ Deploy website on push

# on:
#   push:
#     branches: main

# jobs:
#   web-deploy:
#     name: ðŸŽ‰ Testing
#     runs-on: ubuntu-latest
#     steps:
#       - name: ðŸšš Get latest code
#         uses: actions/checkout@v3

#       - name: Use Node.js 20
#         uses: actions/setup-node@v3
#         with:
#           node-version: "20"

#       - name: ðŸ”¨ Build Project
#         run: |
#           npm install
#           npm run build
#           npm run test

#       - name: ðŸ“‚ Sync files
#         uses: SamKirkland/FTP-Deploy-Action@4.1.0
#         with:
#           server: ${{ secrets.ftp_server }}
#           username: ${{ secrets.ftp_name }}
#           password: ${{ secrets.ftp_password }}
          # dangerous-clean-slate: true
          # local-dir: ./build/